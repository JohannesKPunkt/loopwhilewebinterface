<script type="text/javascript">
//<![CDATA[

current_mode = "${current_mode}"; //possible values: "interpreter", "debugger"
current_state = "stopped"; //possible values: "stopped", "running"
session_id = ${session_id};

function switch_state(new_state)
{
    current_state = new_state;
    var icon = document.getElementById("run_button_icon");
    if(new_state == "running")
    {
        icon.setAttribute("src", "img/icons/baseline_stop_black_24dp.png");
    }
    else
    {
        icon.setAttribute("src", "img/icons/baseline_play_arrow_black_24dp.png");
    }
}

function handle_run_button()
{
	if(current_state == "stopped")
	{
		var program_code = editor.getValue();
		//TODO
		var data = new FormData();
		data.append("program_code", program_code);
		var request = new XMLHttpRequest();
		request.onreadystatechange = function()
		{
			if (this.readyState == 4 && this.status == 200)
			{
				// server is now running the program
				var id = parseInt(this.responseText, 10);
				if (isNaN(id))
				{
					alert("illegal response from server");
					session_id = 0;
				}
				else
				{
					session_id = id;
				}
			}
			else if (this.readyState == 4)
			{
				alert("connection error " + this.status);
				alert(this.responseText); //TODO only for debug
			}
		};
		request.timeout = 2000;
		request.open("POST", "run", true);
		request.send(data);
        switch_state("running")
		window.reload_terminal_agent = setTimeout(reload_terminal, 500);
		window.await_termination_agent = setInterval(check_termination, 500);
		
	}
	else
	{
		//TODO
		
		var data = new FormData();
		data.append("session_id", session_id);
		var requesta = new XMLHttpRequest();
		requesta.onreadystatechange = function()
		{
			if (this.readyState == 4 && this.status == 200)
			{
				if (this.responseText != "OK")
				{
					alert(this.responseText)
				}
			}
			else if (this.readyState == 4)
			{
				alert("connection error " + this.status);
			}
		};
		requesta.timeout = 2000;
		requesta.open("POST", "stop", true);
		requesta.send(data);
		
		session_id = 0;
		clearTimeout(window.reload_terminal_agent);
		switch_state("stopped");
	}
}

function check_termination()
{
    button = document.getElementById("run_button");
	var data = new FormData();
	data.append("session_id", session_id);
	var requesta = new XMLHttpRequest();
	requesta.onreadystatechange = function()
	{
		if (this.readyState == 4 && this.status == 200)
		{
			if (this.responseText != "running")
			{
                clearInterval(window.await_termination_agent);
                clearTimeout(window.reload_terminal_agent);
				session_id = 0;
                if(current_mode == "interpreter")
                {
                    switch_state("stopped");
                }
				if (this.responseText == "timeout")
				{
					alert("Timeout");
				}
			}
		}
		
	};
	requesta.timeout = 2000;
	requesta.open("POST", "check_termination", true);
	requesta.send(data);
}

function handle_debug_button()
{
    var form = document.createElement("form");
    form.target = "_self";
    form.method = "POST";
    form.action = "debugger";
    var input = document.createElement("input");
    input.type = "hidden";//test text
    input.name = "program_code";
    input.value = editor.getValue();

    form.appendChild(input);
    document.body.appendChild(form);
    form.submit();
}

function handle_debug_close_button()
{
    var form = document.createElement("form");
    form.target = "_self";
    form.method = "POST";
    form.action = "debugger_leave";
    var input = document.createElement("input");
    input.type = "hidden";//test text
    //input.name = "program_code";
    //input.value = "foo";//TODO
    input.name = "session_id";
    input.value = session_id;

    form.appendChild(input);
    document.body.appendChild(form);
    form.submit();
}

function breakpoint_action(id)
{
    var elem = document.getElementById(id);
    if (elem.getAttribute("src") == "/img/transparentdot.png")
    {
        var data = new FormData();
        data.append("session_id", session_id);
        data.append("line_no", id.slice(3));
        var requesta = new XMLHttpRequest();
        requesta.onreadystatechange = function()
        {
            if (this.readyState == 4 && this.status == 200)
            {
                if (this.responseText == "OK")
                {
                    elem.setAttribute("src", "/img/reddot.png");
                }
            }
            
        };
        requesta.timeout = 2000;
        requesta.open("POST", "set_breakpoint", true);
        requesta.send(data);
     }
     else
     {
        var data = new FormData();
        data.append("session_id", session_id);
        data.append("line_no", id.slice(3));
        var requesta = new XMLHttpRequest();
        requesta.timeout = 2000;
        requesta.open("POST", "remove_breakpoint", true);
        requesta.send(data);
        elem.setAttribute("src", "/img/transparentdot.png");
     }
}

function check_debugger_state()
{
    check_termination();
    reload_terminal();
    
    //check if debugger stopped
    var data = new FormData();
	data.append("session_id", session_id);
	data.append("action", "pollstate");
	var request = new XMLHttpRequest();
	request.onreadystatechange = function()
	{
		if (this.readyState == 4 && this.status == 200)
		{
			if(this.responseText == "FAIL" || this.responseText == "DIED")
            {
                if(active_line != "")
                {
                    var elem = document.getElementById(active_line);
                    elem.setAttribute("class", "debuggerCodeViewLine");
                    active_line = ""
                }
                
                if(current_tab != "terminal_container")
                {
                    switch_tab("terminal_container");
                }
            }
            else if(this.responseText != "None")
            {
                if(active_line != "")
                {
                    var elem = document.getElementById(active_line);
                    elem.setAttribute("class", "debuggerCodeViewLine");
                }
                var strace = JSON.parse(this.responseText);
                var line = strace[0]["line"];
                var elem = document.getElementById("line" + line);
                elem.setAttribute("class", "debuggerCodeViewLineActive");
                active_line = "line" + line;
                elem.scrollIntoView();
                
                // remove old table
                var table_node = document.getElementById("debugger_varview");
                table_node.remove();
                // create new table node
                var varview_cont = document.getElementById("debugger_varview_container");
                table_node = document.createElement("table");
                table_node.setAttribute("id", "debugger_varview");
                varview_cont.appendChild(table_node);
                for(var frame_id in strace)
                {
                    var frame = strace[frame_id];
                    var tr = document.createElement("tr");
                    var td = document.createElement("td");
                    tr.appendChild(td);
                    var macro_b = document.createElement("b");
                    macro_b.appendChild(document.createTextNode("macro"));
                    td.appendChild(macro_b);
                    var text = document.createTextNode(" " + frame["macro"]);
                    td.appendChild(text);
                    
                    table_node.appendChild(tr);
                    for(var binding_id in frame["bindings"])
                    {
                        var binding = frame["bindings"][binding_id];
                        var tr = document.createElement("tr");
                        var td = document.createElement("td");
                        tr.appendChild(td);
                        var text = document.createTextNode("\u00A0\u00A0" + binding["VarType"] + " " + binding["Ident"] + ": " + binding["Val"]);
                        td.appendChild(text);
                        table_node.appendChild(tr);
                    }
                }
                
                if(current_tab != "debugger_varview_container")
                {
                    switch_tab("debugger_varview_container");
                }
            }
		}
		
	};
	request.timeout = 2000;
	request.open("POST", "debugger_poll_state", true);
	request.send(data);
}

function switch_tab(tabname)
{
    var oldtab = document.getElementById(current_tab);
    current_tab = tabname;
    var newtab = document.getElementById(current_tab);
    oldtab.setAttribute("class", "tabframe");
    newtab.setAttribute("class", "activetabframe");
}

function handle_continue_button()
{
    if (current_state == "stopped")
    {
        current_state = "running";
		window.await_termination_agent = setInterval(check_debugger_state, 200);
    }
    handle_action("continue");
}

function handle_step_over_button()
{
    handle_action("stepover");
}

function handle_step_into_button()
{
    handle_action("stepinto");
}

function handle_step_out_button()
{
    handle_action("stepout");
}

function handle_action(action)
{
    var data = new FormData();
	data.append("session_id", session_id);
	data.append("action", action);
	var request = new XMLHttpRequest();
	request.onreadystatechange = function()
	{
        //TODO: do some error handling here?
	};
	request.timeout = 2000;
	request.open("POST", "debugger_action", true);
	request.send(data);
}
//]]>
</script>
